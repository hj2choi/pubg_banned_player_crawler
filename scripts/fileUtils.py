import os
import csv

def autogenerateDataDirectories(target_directory):
    if not os.path.exists(target_directory):
        os.makedirs(target_directory)
    if not os.path.exists(target_directory+"match_stats"):
        os.makedirs(target_directory+"match_stats")
    if not os.path.exists(target_directory+"seasonal_stats"):
        os.makedirs(target_directory+"seasonal_stats")
    if not os.path.exists(target_directory+"telemetry_data"):
        os.makedirs(target_directory+"telemetry_data")

def writeMatchDataToCsv(filename, match_list):
    fieldnames = ["matchId", "createdAt", "gameMode", "mapName", "isCustomMatch", "duration", "rank", "won",
                    "DBNOs", "assists", "boosts", "damageDealt", "deathType", "headshotKills", "heals",
                    "killPlace", "killPoints", "killPointsDelta", "killStreaks", "kills", "lastKillPoints", "lastWinPoints",
                    "longestKill", "mostDamage", "rankPoints", "revives", "rideDistance", "roadKills", "swimDistance", "teamKills",
                    "timeSurvived", "vehicleDestroys", "walkDistance", "weaponsAcquired", "winPlace", "winPoints", "winPointsDelta",
                    "teammates", "telemetryDataURL"]

    with open(filename, mode='w') as csv_file:
        writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
        writer.writeheader()

        for match_data in match_list:
            roster_str = ""
            for teammate in match_data["rosterIdList"]:
                roster_str+=teammate["id"]+"&"
            roster_str = roster_str[:-1]

            match_data = {**match_data, **match_data["matchAttributes"], **match_data["playerStats"]}
            match_data["teammates"] = roster_str
            for unused_key in ["titleId", "shardId", "playerId", "stats",
                                "rosterIdList", "won", "tags", "matchAttributes","seasonState",
                                "name", "responseStatus", "playerStats"]:
                match_data.pop(unused_key)
            writer.writerow(match_data)
